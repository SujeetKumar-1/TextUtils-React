{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","abouttxt","role","placeholder","onClick","toggleMode","htmlFor","TextForm","text","setText","useState","style","color","heading","rows","value","onChange","event","console","log","target","backgroundColor","handleUpClick","newtext","toUpperCase","showAlert","handleLoClick","toLowerCase","handleCleareClick","handleCopy","document","getElementById","select","navigator","clipboard","writeText","handleExtraSpace","newText","split","join","length","Alert","alert","word","lower","charAt","slice","capitalize","message","App","setMode","setAlert","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.d422b2fa.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {a} from 'react-router-dom';\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"/navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-a active\" aria-current=\"page\" href=\"#\">Home</a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-a\" href=\"#\">{props.abouttxt}</a>\r\n            </li>\r\n          </ul>\r\n          <form className=\"d-flex\" role=\"search\">\r\n            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n            <button className=\"btn btn-outline-primary\" type=\"submit\">Search</button>\r\n          </form>\r\n          <div className={`form-check form-switch text-${props.mode==='dark'?'light':'dark'}`}>\r\n              <input className=\"form-check-input mx-2\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Dark Mode</label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  abouttxt: PropTypes.string\r\n}\r\n\r\n// Navbar.defaultProps = {\r\n//   title: 'Set Title here',\r\n//   abouttxt: \"About text here\"\r\n// }","import React, { useState } from 'react';\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = () => {\r\n        console.log(\"Uppercase was clicked\");\r\n        let newtext = text.toUpperCase();\r\n        setText(newtext)\r\n        props.showAlert(\"Converted to Uppercase!\", \"success\");\r\n    }\r\n\r\n    const handleLoClick = () => {\r\n        let newtext = text.toLowerCase();\r\n        setText(newtext)\r\n        props.showAlert(\"Converted to Lowercase!\", \"success\");\r\n    }\r\n\r\n    const handleCleareClick = () => {\r\n        let newtext = \"\";\r\n        setText(newtext)\r\n        props.showAlert(\"Texts has been Cleared!\", \"success\");\r\n\r\n    }\r\n\r\n    const handleCopy = ()=>{\r\n        let text=document.getElementById(\"myBox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Texts Copied to clipboard!\", \"success\");\r\n    }\r\n\r\n    const handleExtraSpace = ()=>{\r\n        let newText=text.split(/[ ]+/);\r\n        setText(newText.join(\" \"))\r\n        props.showAlert(\"Extra Spaces has been Deleted!\", \"success\");\r\n    }\r\n\r\n    const handleOnChange = (event) => {\r\n        console.log(\"OnChange was clicked\");\r\n        setText(event.target.value);\r\n    }\r\n\r\n\r\n    const [text, setText] = useState('Enter text here');\r\n    // text=\"new text\"; //wrong way to update text value\r\n    // setText(\"New Text\"); //right way to update  text value\r\n    return (\r\n        <div>\r\n            <div className=\"container\" style={{color: props.mode==='dark'?'white':'black'}}>\r\n                <h1>{props.heading}</h1>\r\n                <div className=\"mb-3\">\r\n                    <textarea className=\"form-control\" id=\"myBox\" rows=\"8\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode==='dark'?'#042843':'white',color: props.mode==='dark'?'white':'black'}}></textarea>\r\n                </div>\r\n\r\n                <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}> Convert to Uppercase</button>\r\n                <button className=\"btn btn-primary mx-2\" onClick={handleLoClick}> Convert to Lowercase</button>\r\n                <button className=\"btn btn-primary mx-2\" onClick={handleCleareClick}> Cleare Text</button>\r\n                <button className=\"btn btn-primary mx-2\" onClick={handleCopy}> Copy</button>\r\n                <button className=\"btn btn-primary mx-2 my-2\" onClick={handleExtraSpace}> Delete Extra Space</button>\r\n            </div>\r\n            <div className=\"container my-3\" style={{color: props.mode==='dark'?'white':'black'}}>\r\n                <h1>Your text summary</h1>\r\n                <p>{text.split(\" \").length-1} word and {text.length} charachter</p>\r\n                <p>{0.008 * text.split(\" \").length} Minuts to read</p>\r\n                <h3>Priview</h3>\r\n                <p>{text.length>0?text:\"Enter Something to textbox to preview here!\"}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n\r\n    const capitalize = (word) =>{\r\n        const lower =word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n\r\n    return (\r\n            props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                <strong>{capitalize(props.alert.type)}</strong>: {props.alert.message}\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","// import logo from './logo.svg';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport Alert from './components/Alert';\n// import About from './components/About';\nimport React, { useState } from 'react';\n\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n// } from \"react-router-dom\";\n\nfunction App() {\n\n  const [mode, setMode] = useState('light'); //Whether dark mode is enabled or not.\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      message: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500)\n  }\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark mode has been enabled\", \"success\")\n      document.title = \"TextUtils Dark Mode\";\n\n      // Highlight website title continuously\n      // setInterval(()=>{\n      //   document.title=\"TextUtils is amazing tools\";\n      // }, 2000);\n\n      // setInterval(()=>{\n      //   document.title=\"Install TextUtils Now\";\n      // }, 1500);\n\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"success\")\n    }\n  }\n\n  return (\n    <div>\n\n      {/* <Router> */}\n      <Navbar title=\"TextUtils\" abouttxt=\"About us\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n        {/* <Switch>\n          <Route exact path=\"/about\">\n            <About />\n          </Route>\n\n          <Route exact path=\"/\"> */}\n            <TextForm showAlert={showAlert} heading=\"Enter your heading\" mode={mode}></TextForm>\n          {/* </Route>\n        </Switch> */}\n      </div>\n      {/* </Router> */}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}